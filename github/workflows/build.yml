name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Build
      run: cargo build --release --verbose
    
    - name: Run tests
      run: cargo test --verbose
    
    - name: Create release directory
      run: |
        mkdir -p release/rust-mame-launcher-${{ github.ref_name }}
        cp target/release/mame_gui release/rust-mame-launcher-${{ github.ref_name }}/
        cp install.sh release/rust-mame-launcher-${{ github.ref_name }}/
        cp uninstall.sh release/rust-mame-launcher-${{ github.ref_name }}/
        cp rust-mame-launcher.desktop release/rust-mame-launcher-${{ github.ref_name }}/
        cp README.md release/rust-mame-launcher-${{ github.ref_name }}/
        cp LICENSE release/rust-mame-launcher-${{ github.ref_name }}/
        chmod +x release/rust-mame-launcher-${{ github.ref_name }}/*.sh
    
    - name: Create tarball
      run: |
        cd release
        tar -czf rust-mame-launcher-${{ github.ref_name }}-linux-x86_64.tar.gz rust-mame-launcher-${{ github.ref_name }}
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: linux-build
        path: release/*.tar.gz

  create-release:
    needs: build-linux
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: linux-build
        path: ./artifacts
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: ./artifacts/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
